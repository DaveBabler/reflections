When would you want to use a remote repository rather than keeping all your work local?
    My Reflection: I would want to use a remote repository in the following situations: when I'm working on a project with a team, 
    when I am working on a project and know I'll be using multiple computers to work on the project, when I want to show
    someone some code I'm working on to get their opinion &/or help.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?
    My Reflection: the most obvious reason is that you may be working locally and your commits may not yet be
    ready to share with your team. If you're not quite done with a new feature sending a bunch of commits to GitHub
    might cause confusion and angst amongst your team.  This is just one of many reasons I can think of. What scares me 
    are the reasons I can't come up with right now.
    

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?
    My Reflection: Forks are clones of other people's repositories on GitHub.  Clones are local copies of a different
    repository a clone can be a cloned repository from GitHub, or a clone of another local repository.  Branches are
    labels added to commits that are effectively offshoots of a repository.  Branches are often used by teams for 
    collaboration and implementing new features. 
 

What is the benefit of having a copy of the last known state of the remote
stored locally?
    My Reflection: the benefit is so that you can access the remote commit locally, and also allows for you to make your 
    merges locally and deal with conflicts locally before committing and pushing back up to the server.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?
    My Reflection:  I have collaborated before using an arcane series of zip files, FTP servers, dropbox and Citrix, 
    it was a nightmare!  I hated it.  I think for anything larger than 30 minutes of code writing I will be 
    using Git and Github!
    
When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?
    My Reflection:  I would do this when I'm working as a team and we run the risk of potentially interacting with the 
    and/or changing the same areas of code. I would also do this when I am alone and building new features that I'm 
    uncertain about and am working on it from different locations, or if I want to think about them or have 
    someone else review them before I go into full implementation.
